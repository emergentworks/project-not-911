{"version":3,"sources":["context/index.ts","queries/index.ts","utils/airtable.ts","navigation/BottomTabNavigator.tsx","screens/AboutScreen.tsx","screens/SettingsScreen.tsx","navigation/HomeStackNavigator.tsx","navigation/LinkingConfiguration.ts","constants/index.ts","App.tsx","svgs/index.ts","components/AddToHomeScreen.tsx","components/index.ts","constants/Layout.ts","constants/Styles.ts","context/ThemeManager.tsx","context/LocationManager.tsx","context/CacheManager.tsx","utils/index.ts","components/BackButton.tsx","components/Themed.tsx","svgs/About.tsx","svgs/Caret.tsx","svgs/Community.tsx","svgs/Cross.tsx","svgs/Hand.tsx","svgs/Homelessness.tsx","svgs/Home.tsx","svgs/LegalSupport.tsx","svgs/WebLink.tsx","svgs/Logo.tsx","svgs/MentalHealth.tsx","svgs/Noise.tsx","svgs/Not911.tsx","svgs/Phone.tsx","svgs/DrugsOrPoisoning.tsx","svgs/Settings.tsx","svgs/TextMessage.tsx","svgs/Violence.tsx","components/CategoryLink.tsx","components/CityLink.tsx","components/IconGroup.tsx","hooks/useCachedResources.ts","navigation/index.ts","screens/index.ts","screens/CategoryScreen.tsx","screens/CitySelectScreen.tsx","screens/NotFoundScreen.tsx","screens/PhoneNumberListScreen.tsx","navigation/Navigation.tsx"],"names":["location","async","airtable","method","url","records","instance","axios","create","baseURL","headers","Authorization","opts","request","data","console","error","BottomTab","createBottomTabNavigator","mode","useTheme","Navigator","initialRouteName","tabBarOptions","activeTintColor","Styles","tint","Screen","name","component","TabOneNavigator","options","tabBarIcon","color","Home","TabTwoNavigator","About","TabThreeNavigator","Settings","TabOneStack","createStackNavigator","HomeStackNavigator","headerTitle","View","style","alignSelf","display","justifyContent","Logo","headerStyle","backgroundColor","white","black","borderBottomColor","borderBottomWidth","headerTintColor","TabTwoStack","AboutScreen","TabThreeStack","SettingsScreen","memo","lightColor","darkColor","blue","styles","container","ScrollView","showsVerticalScrollIndicator","innerView","marginBottom15","Cross","Text","bold","title","paragraph","marginBottom40","Hand","marginBottom60","builtBy","onPress","Linking","openURL","StyleSheet","fontSize","lineHeight","flex","paddingHorizontal","paddingTop","paddingBottom","marginBottom","toggle","useState","isEnabled","setIsEnabled","row","section","marginRight","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","previousState","value","platform","web","separator","marginVertical","gray","text","fontWeight","minHeight","Dimensions","get","height","padding","paddingVertical","flexDirection","Stack","screenOptions","headerShown","CitySelectScreen","CategoryScreen","PhoneNumberListScreen","NotFoundScreen","LinkingConfiguration","prefixes","makeUrl","config","screens","Root","HomeScreen","PhoneNumberList","CitySelect","NotFound","CacheManager","LocationManager","ThemeManager","AppComponent","queryClient","QueryClient","isLoadingComplete","useFonts","Inter_400Regular","Inter_700Bold","fontsLoaded","QueryClientProvider","client","SafeAreaProvider","AddToHomeScreen","Navigation","colorScheme","StatusBar","deferredPrompt","props","state","showInstallPrompt","window","addEventListener","ev","preventDefault","setState","this","Constants","TouchableOpacity","touchable","prompt","btn","PureComponent","bottom","left","right","position","width","zIndex","alignItems","textAlign","Layout","isSmallDevice","orange","background","tabIconDefault","tabIconSelected","light","dark","osTheme","Appearance","getColorScheme","ManageThemeContext","React","createContext","theme","useContext","toggleTheme","newMode","AsyncStorage","setItem","getItem","savedMode","Provider","children","Component","ManageLocationContext","saveLocation","newLocation","savedLocation","ManageCacheContext","cache","setCache","isMounted","meta","cities","map","rec","fields","city","filter","categories","category","newCache","Promise","all","getRecordsFromLocation","numbers","_","isEqual","newCacheStr","JSON","stringify","savedCache","parsedCache","parse","navigation","useNavigation","backBtn","Caret","rotate","goBack","paddingLeft","transform","otherProps","useThemeColor","fontFamily","colorName","colorFromProps","viewBox","fill","Circle","cx","cy","r","stroke","strokeWidth","Rect","x","y","rx","Path","d","strokeLinecap","strokeLinejoin","Community","Homelessness","Defs","id","G","fillRule","Mask","Use","xlinkHref","LegalSupport","WebLink","clipRule","MentalHealth","mask","Noise","Not911","Phone","maskUnits","DrugsOrPoisoning","TextMessage","Violence","CategoryLink","isLast","toLowerCase","replace","navigate","to","marginRight10","CityLink","route","includeIcon","crisis","tel","website","LETTER_TO_TELEPHONE_NUMBER","iconGroup","phoneWrap","textNumber","letterExp","digitExp","textNumberWithoutLetters","i","character","match","Object","keys","letterGroups","includes","toUpperCase","matchingTelephoneLetters","length","formatTextNumber","number","encodeURI","content","borderRadius","flexGrow","flexBasis","marginLeft","setLoadingComplete","useEffect","SplashScreen","preventAutoHideAsync","warn","hideAsync","useCache","useLocation","getUsedCategories","err","catsToRender","cat","danger","dangerTxt","dangerBtn","dangerBtnTxt","BackButton","key","community","communityTxt","marginBottom30","marginVertical30","trusted","sort","cityA","cityB","localeCompare","link","linkText","marginTop","setRecords","showDescIds","setShowDescIds","phoneNumbers","fetchData","sortedAndFilteredRecords","record","re","params","isCrisis","description","hours","phoneNumber","item","centerTxt","pH10","desc","mb10","Array","isArray","num","IconGroup","caret","border","mb20","mr10","paddingTop30","marginHorizontal","phone","NavigationContainer","linking","DefaultTheme","DarkTheme","BottomTabNavigator"],"mappings":"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","file":"static/js/app.1887713f.chunk.js","sourcesContent":["export { ManageThemeContext, ThemeManager, useTheme } from './ThemeManager';\nexport { ManageLocationContext, LocationManager, useLocation } from './LocationManager';\nexport { ManageCacheContext, CacheManager, useCache } from './CacheManager';\n","import { airtable } from '../utils/airtable';\n\n/**\n * @description helper that queries phone numbers from Airtable based on location\n */\nexport const getRecordsFromLocation = async (location: string) => {\n  const { records } = await airtable({\n    method: 'get',\n    url: location,\n  });\n  return records;\n};\n\n","import axios, { AxiosRequestConfig } from 'axios';\n\n// @ts-ignore\nimport { AIRTABLE_KEY } from '@env';\n// console.log('Airtable Key: ', AIRTABLE_KEY);\n\n// Axios is a utility library that simplifies api calls.\n// https://axios-http.com/docs/instance\nconst instance = axios.create({\n  baseURL: 'https://api.airtable.com/v0/appNBdtRINjSfT9Yw/',\n  headers: {\n    Authorization: `Bearer ${AIRTABLE_KEY}`,\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n});\n\n/**\n * @description An async function that when called will fetch all records from airtable via our Axios instance.\n */\nexport const airtable = async (opts: AxiosRequestConfig): Promise<any> => {\n  try {\n    const { data } = await instance.request(opts);\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nimport { Styles } from '../constants';\nimport { useTheme } from '../context';\nimport { AboutScreen } from '../screens/AboutScreen';\nimport { SettingsScreen } from '../screens/SettingsScreen';\nimport { About, Home, Logo, Settings } from '../svgs';\nimport {\n  BottomTabParamList,\n  TabOneParamList,\n  TabThreeParamList,\n  TabTwoParamList,\n} from '../types';\nimport { HomeStackNavigator } from './HomeStackNavigator';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\n/**\n * @description This component renders the bottom navigation for the home/about pages\n */\nexport const BottomTabNavigator = () => {\n  const theme: { mode: 'light' | 'dark' } = useTheme();\n  const { mode } = theme;\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Home\"\n      tabBarOptions={{ activeTintColor: Styles[mode].tint }}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={TabOneNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <Home color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"About\"\n        component={TabTwoNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <About color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Settings\"\n        component={TabThreeNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <Settings color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction TabOneNavigator() {\n  const { mode }: { mode: 'light' | 'dark' } = useTheme();\n\n  return (\n    <TabOneStack.Navigator>\n      <TabOneStack.Screen\n        name=\"CitySelectScreen\"\n        component={HomeStackNavigator}\n        options={{\n          headerTitle: () => (\n            <View\n              style={{\n                alignSelf: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}>\n              <Logo />\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomWidth: 0,\n          },\n          headerTintColor: '#fff',\n        }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction TabTwoNavigator() {\n  const { mode }: { mode: 'light' | 'dark' } = useTheme();\n\n  return (\n    <TabTwoStack.Navigator>\n      <TabTwoStack.Screen\n        name=\"AboutScreen\"\n        component={AboutScreen}\n        options={{\n          headerTitle: () => (\n            <View\n              style={{\n                alignSelf: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}>\n              <Logo />\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomWidth: 0,\n          },\n          headerTintColor: '#fff',\n        }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n\nconst TabThreeStack = createStackNavigator<TabThreeParamList>();\n\nfunction TabThreeNavigator() {\n  const { mode }: { mode: 'light' | 'dark' } = useTheme();\n\n  return (\n    <TabThreeStack.Navigator>\n      <TabThreeStack.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{\n          headerTitle: () => (\n            <View\n              style={{\n                alignSelf: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}>\n              <Logo />\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomColor: mode === 'light' ? Styles.white : Styles.black,\n            borderBottomWidth: 0,\n          },\n          headerTintColor: '#fff',\n        }}\n      />\n    </TabThreeStack.Navigator>\n  );\n}\n","import * as Linking from 'expo-linking';\nimport React, { memo } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\n\nimport { Text, View } from '../components';\nimport { Styles } from '../constants';\nimport { Cross, Hand } from '../svgs';\n\n/**\n * @description This component renders the about page\n */\nexport const AboutScreen = memo(() => (\n  <View\n    lightColor={Styles.white}\n    darkColor={Styles.blue}\n    style={styles.container}>\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <View style={styles.innerView}>\n        <View style={styles.marginBottom15}>\n          <Cross />\n        </View>\n        <Text\n          bold\n          lightColor={Styles.black}\n          darkColor={Styles.white}\n          style={styles.title}>\n          About Not911\n        </Text>\n        <Text\n          lightColor=\"#353535\"\n          darkColor={Styles.white}\n          style={styles.paragraph}>\n          Not 911 is a list of community-based groups that offer preventative services and strategies for issues related to mental health, homelessness, legal aid and other topics.\n        </Text>\n        <Text\n          bold\n          lightColor=\"#353535\"\n          darkColor={Styles.white}\n          style={[styles.paragraph, styles.marginBottom40]}>\n          These are not organizations that should be used in a life-threatening emergency. If someone is experiencing a life-threatening emergency, call 911 immediately.\n        </Text>\n        <Text\n          bold\n          lightColor={Styles.black}\n          darkColor={Styles.white}\n          style={styles.title}>\n          About Us\n        </Text>\n        <Text\n          lightColor=\"#353535\"\n          darkColor={Styles.white}\n          style={styles.paragraph}>\n          Emergent Works interrupts the prison cycle by creating pathways into high-paying jobs in technology for formerly incarcerated people.\n        </Text>\n        <Text\n          lightColor=\"#353535\"\n          darkColor={Styles.white}\n          style={[styles.paragraph, styles.marginBottom40]}>\n          We build software for purpose-driven organizations while creating employment opportunities for formerly incarcerated people.\n        </Text>\n        <View style={styles.marginBottom15}>\n          <Hand />\n        </View>\n        <Text\n          bold\n          lightColor={Styles.black}\n          darkColor={Styles.white}\n          style={styles.title}>\n          Interested in hiring us?\n        </Text>\n        <Text\n          lightColor={Styles.blue}\n          darkColor={Styles.white}\n          style={[styles.paragraph, styles.marginBottom60]}>\n          hello@emergentworks.org\n        </Text>\n        <Text\n          bold\n          lightColor=\"#353535\"\n          darkColor={Styles.white}\n          style={styles.builtBy}\n          onPress={() => {\n            Linking.openURL('https://github.com/emergentworks/project-not-911');\n          }}>\n          Built by Emergent Works\n        </Text>\n        <Text\n          lightColor=\"#353535\"\n          darkColor={Styles.white}\n          style={[styles.builtBy, styles.marginBottom40]}>\n          Tomás Correa, Ross Patton, Ashley Newcomer, Army Armstead, Lauren Wilkinson, Christina Entcheva, Jaclyn Perrone, Johann Diedrick, Scizors\n        </Text>\n      </View>\n    </ScrollView>\n  </View>\n));\n\nconst styles = StyleSheet.create({\n  builtBy: {\n    fontSize: 14,\n    lineHeight: 18,\n  },\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  innerView: {\n    paddingBottom: 50,\n  },\n  marginBottom15: {\n    marginBottom: 15,\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 10,\n  },\n  paragraph: {\n    fontSize: 20,\n    lineHeight: 26,\n    marginBottom: 20,\n  },\n  marginBottom40: {\n    marginBottom: 40,\n  },\n  marginBottom60: {\n    marginBottom: 60,\n  },\n});\n","import Constants from 'expo-constants';\nimport React, { memo, useState } from 'react';\nimport { Dimensions, ScrollView, StyleSheet, Switch } from 'react-native';\n\nimport { Text, View } from '../components';\nimport { Styles } from '../constants';\nimport { useTheme } from '../context';\n\n/**\n * @description This component is for adjusting user settings, such as theme\n */\nexport const SettingsScreen = memo(() => {\n  const { mode, toggle } = useTheme();\n  const [isEnabled, setIsEnabled] = useState(mode === 'dark');\n\n  const toggleSwitch = () => {\n    setIsEnabled(previousState => !previousState);\n    toggle();\n  };\n\n  return (\n    <View\n      lightColor={Styles.white}\n      darkColor={Styles.blue}\n      style={styles.container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <View style={styles.innerView}>\n          <View style={[styles.row, styles.section]}>\n            <Text style={[styles.bold, { marginRight: 10 }]}>\n              Toggle Dark Mode\n            </Text>\n            <Switch\n              trackColor={{ false: '#767577', true: '#81b0ff' }}\n              thumbColor={isEnabled ? '#f5dd4b' : '#f4f3f4'}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={toggleSwitch}\n              value={isEnabled}\n            />\n          </View>\n          {Constants?.platform?.web && (\n            <>\n              <View\n                style={[Styles.separator, styles.marginVertical]}\n                lightColor={Styles.gray}\n                darkColor={Styles.white}\n              />\n              <View style={styles.section}>\n                <Text style={[styles.bold, styles.text]}>\n                  How to install this web app on your phone or browser\n                </Text>\n                <Text style={styles.text}>\n                  Add to Home Screen (A2HS) is a web app feature that allows you to install this site on your phone as a mobile app.\n                </Text>\n                <Text style={styles.text}>\n                  This will allow you to launch Not911 from your home screen and enables it to work offline.\n                </Text>\n              </View>\n              <View style={styles.section}>\n                <Text style={[styles.bold, styles.text]}>\n                  iOS Safari\n                </Text>\n                <Text style={styles.text}>\n                  Click the share button on the bottom middle of your screen. Then click &apos;Add to Home Screen&apos;. You might have to scroll a little. You should now be able to launch Not911 from your home screen.\n                </Text>\n              </View>\n              <View style={styles.section}>\n                <Text style={[styles.bold, styles.text]}>\n                  Android\n                </Text>\n                <Text style={styles.text}>\n                  If Firefox: Click the home icon (the one with a + in it) that should be next to the url.\n                </Text>\n                <Text style={styles.text}>\n                  If Chrome: Click the 3 dots menu button in the top right of your screen, then click &apos;Add to Home screen&apos;. You should now be able to launch Not911 from your home screen.\n                </Text>\n              </View>\n              <View style={styles.section}>\n                <Text style={[styles.bold, styles.text]}>\n                  Chrome\n                </Text>\n                <Text style={styles.text}>\n                  Click the 3 dots menu button in the top right of your screen, then click &apos;Install Not911&apos;. You should now be able to launch Not911 from your Chrome apps menu.\n                </Text>\n              </View>\n            </>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: 'bold',\n  },\n  container: {\n    flex: 1,\n  },\n  innerView: {\n    minHeight: Dimensions.get('window').height,\n    padding: 20,\n    paddingBottom: 50,\n  },\n  section: {\n    display: 'flex',\n    paddingVertical: 10,\n  },\n  marginVertical: {\n    marginVertical: 10,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  text: {\n    marginBottom: 10,\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport {\n  CategoryScreen,\n  CitySelectScreen,\n  NotFoundScreen,\n  PhoneNumberListScreen,\n} from '../screens';\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<any>();\n\nexport const HomeStackNavigator = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\n    <Stack.Screen name=\"CitySelectScreen\" component={CitySelectScreen} />\n    <Stack.Screen name=\"CategoryScreen\" component={CategoryScreen} />\n    <Stack.Screen name=\"PhoneNumberListScreen\" component={PhoneNumberListScreen} />\n    <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n  </Stack.Navigator>\n);\n","import * as Linking from 'expo-linking';\n\n/**\n * @description This is necessary for any links to work natively\n * Any new screens/routes we add to the app, must also be defined here\n */\nexport const LinkingConfiguration = {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          Home: {\n            screens: {\n              HomeScreen: 'app',\n            },\n          },\n          About: {\n            screens: {\n              AboutScreen: 'app/about',\n            },\n          },\n          Settings: {\n            screens: {\n              SettingsScreen: 'app/settings',\n            },\n          },\n          PhoneNumberList: {\n            screens: {\n              PhoneNumberListScreen: 'app/numbers/:section',\n            },\n            CitySelect: {\n              screens: {\n                CitySelectScreen: 'app/cityselect',\n              },\n            },\n          },\n        },\n      },\n      NotFound: '*',\n    },\n  },\n};\n","export { Layout } from './Layout';\nexport { Styles } from './Styles';\n","import { Inter_400Regular, Inter_700Bold, useFonts } from '@expo-google-fonts/inter';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport { AddToHomeScreen } from './components';\nimport { CacheManager, LocationManager, ThemeManager, useTheme } from './context';\nimport useCachedResources from './hooks/useCachedResources';\nimport { Navigation } from './navigation';\n\nconst queryClient = new QueryClient();\n\n/**\n * @description Starting point for the entire app.\n * mimics native functionality, doesn't render anything until app is fully loaded\n */\nconst AppComponent = () => {\n  const isLoadingComplete = useCachedResources();\n  const { mode }: { mode: 'light' | 'dark' } = useTheme();\n  const [fontsLoaded] = useFonts({\n    Inter_400Regular,\n    Inter_700Bold,\n  });\n\n  if (!isLoadingComplete || !fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <SafeAreaProvider>\n        <AddToHomeScreen />\n        <Navigation colorScheme={mode} />\n        <StatusBar />\n      </SafeAreaProvider>\n    </QueryClientProvider>\n  );\n};\n\nexport default function App() {\n  return (\n    <CacheManager>\n      <LocationManager>\n        <ThemeManager>\n          <AppComponent />\n        </ThemeManager>\n      </LocationManager>\n    </CacheManager>\n  );\n}\n","// @TODO refactor all SVG components to:\n// - either auto detect color scheme\n/**\n * @description SVG component exports. Because SVG is not supported natively, we have to jump through some hoops to get it to render correctly across all devices\n */\n\nexport { About } from './About';\nexport { Caret } from './Caret';\nexport { Community } from './Community';\nexport { Cross } from './Cross';\nexport { Hand } from './Hand';\nexport { Homelessness } from './Homelessness';\nexport { Home } from './Home';\nexport { LegalSupport } from './LegalSupport';\nexport { WebLink } from './WebLink';\nexport { Logo } from './Logo';\nexport { MentalHealth } from './MentalHealth';\nexport { Noise } from './Noise';\nexport { Not911 } from './Not911';\nexport { Phone } from './Phone';\nexport { DrugsOrPoisoning } from './DrugsOrPoisoning';\nexport { Settings } from './Settings';\nexport { TextMessage } from './TextMessage';\nexport { Violence } from './Violence';\n","import Constants from 'expo-constants';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport { Styles } from '../constants';\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: Array<string>;\n\n  readonly userChoice: Promise<{\n    outcome: 'accepted' | 'dismissed',\n    platform: string\n  }>;\n\n  prompt(): Promise<void>;\n}\n\nlet deferredPrompt: BeforeInstallPromptEvent;\n\n/**\n * @description Allows user to add web app to their phone home screen, regardless of OS\n */\nexport class AddToHomeScreen extends PureComponent<any> {\n  state = {\n    showInstallPrompt: false,\n  };\n\n  constructor(props: any) {\n    super(props);\n    if (typeof window === 'undefined') return;\n    if (typeof window?.addEventListener === 'undefined') return;\n\n    // unfortunately, we have no control over this event.\n    // it will fire only if certain conditions are met, which vary\n    // one of which is time spent on site - which means it likely won't show\n    // but it's the easiest way to trigger the PWA install flow\n    window.addEventListener('beforeinstallprompt', ev => {\n      // needed to prevent old browsers from auto showing the install prompt\n      ev.preventDefault();\n\n      // stash the event so it can be triggered later on click\n      deferredPrompt = ev as BeforeInstallPromptEvent;\n\n      this.setState({\n        showInstallPrompt: true,\n      });\n    });\n  }\n\n\n  render() {\n    if (!this.state.showInstallPrompt) return null;\n    if (!Constants?.platform?.web) return null;\n\n    return (\n      <TouchableOpacity\n        style={styles.touchable}\n        onPress={() => {\n          deferredPrompt.prompt();\n        }}>\n        <View\n          lightColor=\"#555\"\n          darkColor=\"#555\"\n          style={styles.btn}>\n          <Text\n            lightColor={Styles.white}\n            darkColor={Styles.white}\n            style={styles.text}>\n            Add to Home Screen\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  touchable: {\n    bottom: 50,\n    left: 0,\n    right: 0,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 99,\n  },\n  btn: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 14,\n    width: '100%',\n  },\n  text: {\n    flex: 1,\n    fontWeight: 'bold',\n    fontSize: 14,\n    lineHeight: 14,\n    textAlign: 'center',\n  },\n});\n","export { AddToHomeScreen } from './AddToHomeScreen';\nexport { BackButton } from './BackButton';\nexport { CategoryLink } from './CategoryLink';\nexport { CityLink } from './CityLink';\nexport { IconGroup } from './IconGroup';\nexport { Text, View } from './Themed';\n","import { Dimensions } from 'react-native';\n\nconst { width } = Dimensions.get('window');\nconst { height } = Dimensions.get('window');\n\nexport const Layout = {\n  window: {\n    height,\n    width,\n  },\n  isSmallDevice: width < 375,\n};\n","const tintColorLight = '#3333ff';\nconst tintColorDark = '#fff';\n\nexport const Styles = {\n  black: '#000',\n  white: '#fff',\n  gray: '#b9b9b9',\n  blue: '#3333ff',\n  orange: '#ff4d4a',\n  separator: {\n    height: 1,\n    width: '100%',\n  },\n  'no-preference': {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#3333ff',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","import AsyncStorage from '@react-native-community/async-storage';\nimport React from 'react';\nimport { Appearance } from 'react-native-appearance';\n\nimport { Styles } from '../constants';\n// import useColorScheme from '../hooks/useColorScheme';\n\n// default colour scheme from OS\nconst osTheme = Appearance.getColorScheme() || 'light';\n\n// initiate context\nexport const ManageThemeContext: React.Context<any> = React.createContext({\n  mode: osTheme,\n  theme: Styles[osTheme],\n  toggle: () => { },\n});\n\n// define useTheme hook for functional components\nexport const useTheme = () => React.useContext(ManageThemeContext);\n\n/**\n * @description initializes theme based on OS theme - but allow for toggling\n */\nexport class ThemeManager extends React.Component<any, any> {\n  state = {\n    mode: osTheme,\n  };\n\n  async componentDidMount() {\n    try {\n      const savedMode = await AsyncStorage.getItem('theme');\n      if (savedMode\n        && savedMode !== this.state.mode) {\n        this.setState({\n          mode: savedMode,\n        });\n      }\n    } catch (err) { }\n  }\n\n  toggleTheme = async () => {\n    const { mode } = this.state;\n    let newMode = 'light';\n\n    if (mode === 'light') {\n      newMode = 'dark';\n    }\n\n    try {\n      await AsyncStorage.setItem('theme', newMode);\n      this.setState({\n        mode: newMode,\n      });\n    } catch (err) { }\n  }\n\n  render() {\n    return (\n      <ManageThemeContext.Provider\n        value={{\n          mode: this.state.mode,\n          theme: Styles[this.state.mode],\n          toggle: this.toggleTheme,\n        }}>\n        {this.props.children}\n      </ManageThemeContext.Provider>\n    );\n  }\n}\n","import AsyncStorage from '@react-native-community/async-storage';\nimport React from 'react';\n\nimport { tCacheUnion } from '../types';\n\n/**\n * @description this component sets and saves a city location using React Context\n */\n\n// initiate context\nexport const ManageLocationContext: React.Context<any> = React.createContext({\n  location: null as tCacheUnion | null,\n  saveLocation: () => { },\n});\n\n// define useLocation hook for functional components\nexport const useLocation = () => React.useContext(ManageLocationContext);\n\nexport class LocationManager extends React.Component<any, any> {\n  state = {\n    location: null as tCacheUnion | null,\n  };\n\n  async componentDidMount() {\n    try {\n      const savedLocation = await AsyncStorage.getItem('location');\n      if (savedLocation\n        && savedLocation !== this.state.location) {\n        this.setState({\n          location: savedLocation,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  saveLocation = async (newLocation: tCacheUnion) => {\n    try {\n      await AsyncStorage.setItem('location', newLocation);\n      this.setState({\n        location: newLocation,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    return (\n      <ManageLocationContext.Provider\n        value={{\n          location: this.state.location,\n          saveLocation: this.saveLocation,\n        }}>\n        {this.props.children}\n      </ManageLocationContext.Provider>\n    );\n  }\n}\n","import AsyncStorage from '@react-native-community/async-storage';\nimport _ from 'lodash';\nimport React from 'react';\n\nimport { getRecordsFromLocation } from '../queries';\nimport { airtable } from '../utils';\n\n/**\n * @description this component sets and saves cache using React Context.\n * Async Storage only stores string data. In order to store object data\n * we serialize it first using JSON. stringify() when saving the data\n * and JSON. parse() when loading the data.\n * @returns JSON\n */\ntype tCache = {\n  categories?: string[],\n  Boston?: object[],\n  Chicago?: object[],\n  'New York'?: object[],\n  'Los Angeles'?: object[],\n  'San Francisco Bay Area'?: object[]\n};\n\ntype tCacheContext = {\n  cache: tCache,\n  setCache: () => void,\n};\n\n// initiate context\nexport const ManageCacheContext: React.Context<tCacheContext> = React.createContext({\n  cache: {} as tCache,\n  setCache: () => { },\n});\n\n// define useCache hook for functional components\nexport const useCache = () => React.useContext(ManageCacheContext);\n\n// Initializes cache\nexport class CacheManager extends React.Component<any, any> {\n  state = {\n    cache: {} as tCache,\n  };\n\n  static isMounted = false;\n\n  // Retrieve cache from storage and save it.\n  async componentDidMount() {\n    CacheManager.isMounted = true;\n\n    try {\n      const savedCache = await AsyncStorage.getItem('cache');\n      if (typeof savedCache === 'string') {\n        const parsedCache = JSON.parse(savedCache);\n        // We do this to prevent infinite loops.\n        if (!_.isEqual(this.state.cache, parsedCache)) {\n          this.setState({\n            cache: parsedCache,\n          });\n        }\n      } else {\n        this.setCache();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  componentWillUnmount() {\n    CacheManager.isMounted = false;\n  }\n\n  /**\n   * @description Fetch all city names from Airtable and use to query for all\n   * phone numbers. If any change save to cache, else do nothing.\n   */\n  setCache = async () => {\n    if (!CacheManager.isMounted) return null;\n\n    // the meta table tells us things like, what cities and categories we have atm\n    const meta = await airtable({\n      method: 'get',\n      url: 'meta',\n    });\n\n    const cities: string[] = meta.records.map((rec: any) => {\n      return rec.fields.city;\n    }).filter((city: string) => !!city);\n\n    const categories: string[] = meta.records.map((rec: any) => {\n      return rec.fields.category || '';\n    }).filter((category: string) => !!category);\n\n    const newCache: tCache = { categories };\n    await Promise.all(cities.map(async (city: string) => {\n      const numbers = await getRecordsFromLocation(city);\n      // @ts-ignore\n      newCache[city] = numbers;\n      return null;\n    }));\n\n    // if we called setCache but it turns out, no change, don't do anything else\n    if (_.isEqual(this.state.cache, newCache)) {\n      return null;\n    }\n\n    // finally, create the new cache, in state as an object (for immediate use in the app)\n    // and also in async storage, where it needs to be a string\n    const newCacheStr = JSON.stringify(newCache);\n    try {\n      await AsyncStorage.setItem('cache', newCacheStr);\n      this.setState({\n        cache: newCache,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    return (\n      <ManageCacheContext.Provider\n        value={{\n          cache: this.state.cache,\n          setCache: this.setCache,\n        }}>\n        {this.props.children}\n      </ManageCacheContext.Provider>\n    );\n  }\n}\n","export { airtable } from './airtable';\n","import { useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { Styles } from '../constants';\nimport { Caret } from '../svgs';\nimport { Text, View } from './Themed';\n\n/**\n * @description This component renders the Back Button on all screens\n *\n*/\n\nexport const BackButton = (props: { darkColor?: 'blue' | 'black' }) => {\n  const { darkColor = 'blue' } = props;\n  const navigation = useNavigation();\n\n  return (\n    <View\n      darkColor={Styles[darkColor]}\n      lightColor={Styles.white}\n      style={styles.backBtn}>\n      <Caret style={styles.rotate} />\n      <Text\n        bold\n        darkColor={Styles.white}\n        lightColor={Styles.blue}\n        onPress={() => navigation.goBack()}>\n        Back\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backBtn: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingBottom: 30,\n    paddingLeft: 30,\n  },\n  rotate: {\n    marginRight: 10,\n    transform: [{ rotate: '180deg' }],\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport { Styles } from '../constants';\nimport { useTheme } from '../context';\n\n/**\n * @description helper function for getting default styles below for light/dark schemes\n */\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Styles.light & keyof typeof Styles.dark,\n) {\n  const { mode }: { mode: 'light' | 'dark' } = useTheme();\n  const colorFromProps = props[mode];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Styles[mode][colorName];\n\n}\n\ntype ThemeProps = {\n  bold?: true,\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\n/**\n * @description generic themed Text component. works just like the react native Text\n * but defaults to our font and uses the right dark/light color based on theme\n */\nexport function Text(props: TextProps) {\n  const { bold, style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({\n    light: lightColor,\n    dark: darkColor,\n  }, 'text');\n\n  let fontFamily = 'Inter_400Regular';\n  if (bold) {\n    fontFamily = 'Inter_700Bold';\n  }\n\n  return (\n    <DefaultText\n      style={[{ color, fontFamily }, style]}\n      {...otherProps}\n    />\n  );\n}\n\n/**\n * @description generic themed View component. works just like the react native View\n * but uses the right dark/light color based on theme\n */\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({\n    light: lightColor,\n    dark: darkColor,\n  }, 'background');\n\n  return (\n    <DefaultView\n      style={[{ backgroundColor }, style]}\n      {...otherProps}\n    />\n  );\n}\n","import React, { memo } from 'react';\nimport Svg, { Circle, Rect } from 'react-native-svg';\n\nexport const About = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={22} height={22} viewBox=\"0 0 22 22\" fill=\"none\" {...props}>\n    <Circle cx={11} cy={11} r={10} stroke={props.color} strokeWidth={2} />\n    <Rect x={10} y={9} width={2} height={7} rx={1} fill={props.color} />\n    <Circle cx={11} cy={6} r={1} fill={props.color} />\n  </Svg>\n));\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const Caret = memo((props: React.SVGProps<SVGSVGElement> & {style?: any}) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  return (\n    // @ts-ignore\n    <Svg\n      style={props.style}\n      width={9}\n      height={16}\n      fill=\"none\"\n      {...props}>\n      <Path\n        d=\"M1 1l7 7-7 7\"\n        stroke={mode === 'light' ? '#B9B9B9' : '#fff'}\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const Community = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  return (\n    // @ts-ignore\n    <Svg width={96} height={43} fill=\"none\" {...props}>\n      <Path\n        d=\"M48.014 0c8.408 0 15.638 5.074 18.79 12.327A17.07 17.07 0 0178.883 7.34C88.333 7.34 96 15.007 96 24.46c0 9.449-7.67 17.117-17.119 17.117a17.121 17.121 0 01-14.763-8.45c-3.75 4.768-9.571 7.832-16.104 7.832-6.344 0-12.016-2.888-15.773-7.42a17.244 17.244 0 01-14.995 8.729C7.723 42.267 0 34.54 0 25.02 0 15.496 7.72 7.773 17.246 7.773c4.444 0 8.675 1.698 11.89 4.758C32.24 5.168 39.524 0 48.014 0zM30.52 31.128a20.372 20.372 0 01-2.986-10.649c0-1.774.226-3.498.652-5.141l-.149-.163a14.573 14.573 0 00-10.792-4.762c-8.067 0-14.607 6.54-14.607 14.607 0 3.331 1.12 6.529 3.192 9.118a10.17 10.17 0 01.909-1.567c1.923-2.66 3.556-.913 5.282-2.344.361-.3.561-.7.659-1.146a8.186 8.186 0 01-1.182-1.16c-1.463-1.753-2.194-4.034-2.194-6.303 0-4.394 2.982-9.042 7.755-9.042s7.755 4.648 7.755 9.042c0 2.269-.733 4.55-2.194 6.304a8.316 8.316 0 01-1.18 1.16c.095.446.295.844.655 1.145 1.725 1.431 3.359-.315 5.284 2.344.407.564.751 1.21 1.042 1.859a14.473 14.473 0 002.003-3.104l.096-.198zm-11.457-.77a6.794 6.794 0 01-4.008-.003 4.464 4.464 0 01-1.35 1.904c-1.858 1.538-4.045.774-4.831 1.86-.43.595-.781 1.357-1.06 2.06a14.569 14.569 0 009.43 3.448c3.341 0 6.55-1.128 9.15-3.217-.298-.775-.68-1.64-1.153-2.29-.783-1.087-2.972-.323-4.827-1.861a4.446 4.446 0 01-1.351-1.901zm2.956-10.313c-1.891-.038-2.502-.414-4.252.828-1.832 1.298-3.524 1.997-5.75 1.845.179 1.278.674 2.525 1.503 3.52 1.971 2.366 5.106 2.366 7.077 0 1.067-1.281 1.578-2.967 1.578-4.62a7.907 7.907 0 00-.156-1.572zm-9.926.028c1.628.116 2.856-.435 4.2-1.384 2.144-1.515 2.507-1.33 4.611-1.286-.89-1.269-2.24-2.188-3.845-2.188-2.682 0-4.472 2.43-4.966 4.858zm55.674-5.008a20.482 20.482 0 01.726 5.415c0 3.731-1 7.231-2.748 10.245l.091.184a14.511 14.511 0 001.705 2.665c.262-.554.564-1.101.918-1.592 1.903-2.632 3.521-.895 5.248-2.326.367-.305.569-.715.665-1.172-2.22-1.765-3.358-4.61-3.358-7.409 0-4.352 2.952-8.96 7.682-8.96 4.728 0 7.682 4.608 7.682 8.96 0 2.799-1.14 5.647-3.358 7.41.094.456.297.866.666 1.171 1.724 1.43 3.343-.305 5.246 2.326.413.572.759 1.227 1.054 1.882a14.5 14.5 0 003.444-9.405c0-8.037-6.512-14.551-14.55-14.551a14.516 14.516 0 00-10.979 5.002l-.134.155zm20.24 20.726c-.296-.778-.68-1.648-1.153-2.304-.794-1.096-2.958-.324-4.806-1.854a4.413 4.413 0 01-1.344-1.904 6.645 6.645 0 01-2.008.309 6.692 6.692 0 01-2.01-.31 4.4 4.4 0 01-1.344 1.905c-1.847 1.532-4.01.757-4.805 1.854-.433.6-.786 1.367-1.065 2.072a14.507 14.507 0 009.408 3.449c3.334 0 6.537-1.128 9.127-3.217zM80.12 14.935c.363 1.786 1.418 3.51 3.316 3.737-.535-1.632-1.682-3.148-3.316-3.737zm3.686 6.324c-2.38-.077-3.93-1.033-5.108-3.032-1.18 1.998-2.728 2.955-5.108 3.032.098 2.885 1.882 6.21 5.108 6.21s5.009-3.325 5.108-6.21zm-9.847-2.587c1.899-.227 2.952-1.954 3.316-3.739-1.636.59-2.782 2.107-3.316 3.74zm-22.415-5.037c2.289 2.312 3.53 1.982 3.53 5.797a9.525 9.525 0 01-.189 1.895c.36.042.69.062 1 .062 1.402 0 3.316-.572 3.316-2.25v-5.004c0-3.122-2.871-5.191-6.527-6.137-3.014-.778-6.513-.795-9.527-.015-3.553.92-6.317 2.97-6.317 6.152v5.005c0 1.694 1.953 2.249 3.317 2.249.309 0 .64-.02.998-.062a9.615 9.615 0 01-.189-1.895c0-3.857.881-3.124 3.526-5.795 3.158-3.182 3.905-3.182 7.062-.002zm2.554 9.964a8.394 8.394 0 01-.913 1.42c.11 1.005.514 1.658 1.305 2.205 2.614 1.784 4.568-.618 7.135 3.177.25.374.489.78.707 1.192a18.057 18.057 0 003.805-11.114c0-10.01-8.11-18.121-18.122-18.121-10.006 0-18.12 8.114-18.12 18.122 0 4.186 1.422 8.042 3.806 11.108.218-.411.453-.815.705-1.187 2.54-3.758 4.228-1.388 7.058-3.133.83-.5 1.272-1.258 1.381-2.252a8.131 8.131 0 01-.911-1.417c-.65.101-1.244.148-1.787.148-2.732 0-5.675-1.523-5.675-4.607v-5.005c0-4.465 3.537-7.248 8.087-8.427 3.388-.879 7.316-.861 10.703.015 4.648 1.2 8.296 4.015 8.296 8.412v5.005c0 3.084-2.941 4.607-5.673 4.607-.546 0-1.139-.047-1.787-.148zm-2.906 3.159a6.268 6.268 0 01-6.355 0 5.17 5.17 0 01-2.116 2.501c-2.943 1.826-4.732.047-6.362 2.46-.363.535-.69 1.153-.973 1.76A18.077 18.077 0 0048.014 38.6a18.07 18.07 0 0012.628-5.12 12.868 12.868 0 00-.971-1.761c-1.67-2.467-3.623-.577-6.514-2.555-.876-.59-1.578-1.411-1.965-2.406zm-1.316-11.464c-2.167-2.186-1.557-2.186-3.726.002-1.676 1.692-2.836 1.76-2.836 4.136 0 1.654.553 3.142 1.447 4.206 1.813 2.164 4.697 2.168 6.509 0 .893-1.064 1.447-2.552 1.447-4.206 0-2.37-1.056-2.337-2.84-4.138z\"\n        fill={mode === 'light' ? '#33f' : '#fff'}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const Cross = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={52} height={50} viewBox=\"0 0 52 50\" fill=\"none\" {...props}>\n      <Path\n        d=\"M29.487 0v15.835c0 3.958 1.847 4.678 3.694 4.678h18.101M29.487 50V34.166c0-3.96 1.816-4.679 3.632-4.679h18.163M20.513 0v15.835c0 3.958-1.739 4.678-3.477 4.678H0M20.513 50V34.166c0-3.96-1.71-4.679-3.418-4.679H0\"\n        stroke={fill}\n        strokeWidth={3.5}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const Hand = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={65} height={45} viewBox=\"0 0 65 45\" fill=\"none\" {...props}>\n      <Path\n        d=\"M36.365 45c-.867 0-1.739-.083-2.6-.251l-19.06-4.65c-1.348-.413-2.142-.305-3.467.44l-2.254 1.286a1.19 1.19 0 01-1.626-.447l-7.203-12.7a1.19 1.19 0 01.445-1.62l5.716-3.266c2.099-1.204 4.968-2.853 9.334-1.754l23.288 6.365a4.412 4.412 0 013.104 3.417l14.572-8.332a5.256 5.256 0 017.147 1.984c1.421 2.498.542 5.702-1.962 7.14L43.092 43.226A13.651 13.651 0 0136.365 45zm-23.027-7.522c.608 0 1.264.1 2 .328l18.937 4.618c2.576.502 5.309.054 7.642-1.27l18.703-10.61a2.869 2.869 0 001.071-3.895 2.867 2.867 0 00-3.899-1.09l-16.26 9.3a4.392 4.392 0 01-1.632 1.633 4.494 4.494 0 01-3.007.504l-11.77-2.81c-1.153-.217-2.282-.23-3.212-.028-.578.123-1.115.338-1.86.743a1.191 1.191 0 01-1.14-2.091c.67-.366 1.49-.767 2.5-.981 1.25-.272 2.67-.264 4.209.028l11.758 2.807c.431.074.928-.007 1.34-.24a2.051 2.051 0 00.761-2.779 2.04 2.04 0 00-1.192-.95l-23.24-6.353c-3.41-.857-5.605.404-7.545 1.516l-4.689 2.678 6.028 10.63 1.224-.699c1.049-.591 2.064-.99 3.273-.99zM33.422 19.02c-3.36 0-5.991-4.139-5.991-9.423 0-5.286 2.631-9.425 5.991-9.425 3.362 0 5.995 4.14 5.995 9.425 0 5.284-2.633 9.423-5.995 9.423zm0-16.467c-1.707 0-3.61 2.893-3.61 7.044 0 4.15 1.903 7.042 3.61 7.042 1.71 0 3.614-2.893 3.614-7.042 0-4.15-1.905-7.044-3.614-7.044z\"\n        fill={fill}\n      />\n      <Path\n        d=\"M33.218 19.116a1.19 1.19 0 01-.072-2.378l4.32-.269c1.783-.002 3.688-2.895 3.688-7.045S39.249 2.38 37.54 2.38l-4.2.076c-.648-.024-1.2-.511-1.211-1.169A1.19 1.19 0 0133.298.076L37.453 0c3.45 0 6.082 4.139 6.082 9.424 0 5.285-2.633 9.424-5.995 9.424l-4.246.266c-.026.002-.051.002-.076.002z\"\n        fill={fill}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport Svg, { Path, Rect } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const Homelessness = memo(() => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#3333FF' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={32} height={32} fill=\"none\">\n      <Rect\n        x={1}\n        y={8}\n        width={4}\n        height={21}\n        rx={1}\n        stroke={fill}\n        strokeWidth={1.8}\n      />\n      <Rect\n        x={26}\n        y={18}\n        width={4}\n        height={11}\n        rx={1}\n        stroke={fill}\n        strokeWidth={1.8}\n      />\n      <Path stroke={fill} strokeWidth={1.8} d=\"M5 21h21v4H5z\" />\n      <Rect\n        x={5}\n        y={17}\n        width={8}\n        height={4}\n        rx={2}\n        stroke={fill}\n        strokeWidth={1.8}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport Svg, { Defs, G, Mask, Path, Use } from 'react-native-svg';\n\nexport const Home = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width=\"19px\" height=\"22px\" viewBox=\"0 0 19 22\" {...props}>\n    <Defs>\n      <Path\n        d=\"M0,6.17681 C0,5.45047 0.393784,4.78123 1.02871,4.42849 L7.96893,0.572816 C8.60511,0.219382 9.38307,0.239419 10.0002,0.625134 L16.06,4.4125 C16.6448,4.77798 17,5.41892 17,6.1085 L17,18 C17,19.1046 16.1046,20 15,20 L2,20 C0.89543,20 0,19.1046 0,18 L0,6.17681 Z\"\n        id=\"path-1\"\n      />\n    </Defs>\n    <G\n      id=\"Page-1\"\n      stroke=\"none\"\n      strokeWidth={1}\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    >\n      <G id=\"home\" transform=\"translate(1.000000, 1.000000)\">\n        <Mask id=\"mask-2\" fill=\"white\">\n          <Use xlinkHref=\"#path-1\" />\n        </Mask>\n        <Use id=\"Shape\" stroke={props.color} xlinkHref=\"#path-1\" />\n      </G>\n    </G>\n  </Svg>\n));\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport { useTheme } from '../context';\n\nexport const LegalSupport = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const { mode }: { mode: 'light' | 'dark' } = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={33} height={26} viewBox=\"0 0 33 26\" fill=\"none\" {...props}>\n      <Path\n        d=\"M32.573 13.844l-5.02-11.057a.71.71 0 00-.647-.42H19.37A3.166 3.166 0 0016.319 0a3.166 3.166 0 00-3.05 2.368H5.73a.702.702 0 00-.647.398l-5.02 11.05c-.043.142-.064.206-.064.313 0 3.157 2.574 5.738 5.731 5.738s5.731-2.567 5.731-5.724c0-.107-.021-.2-.064-.292L6.833 3.79h6.407a3.126 3.126 0 002.368 2.41v14.726h-3.172a2.255 2.255 0 00-2.232 2.233v1.493c0 .391.34.683.74.683h10.68c.39 0 .739-.292.739-.683V23.16a2.255 2.255 0 00-2.233-2.233h-3.1V6.2a3.146 3.146 0 002.367-2.41h6.407L21.239 13.85a.695.695 0 00-.064.292 5.742 5.742 0 005.731 5.73 5.741 5.741 0 005.731-5.73.704.704 0 00-.064-.299zM5.731 4.828L9.65 13.46H1.813l3.918-8.632zm0 13.652c-2.133 0-3.91-1.607-4.252-3.598h8.497c-.334 1.991-2.112 3.598-4.245 3.598zm15.21 4.679v.754h-9.315v-.754a.83.83 0 01.81-.81h7.694a.83.83 0 01.81.81zM16.319 4.864c-.953 0-1.721-.775-1.721-1.721 0-.946.775-1.72 1.72-1.72.946 0 1.721.774 1.721 1.72s-.768 1.72-1.72 1.72zm14.505 8.596h-7.836l3.918-8.632 3.918 8.632zm-3.918 5.02c-2.133 0-3.91-1.607-4.252-3.598h8.497c-.334 1.991-2.112 3.598-4.245 3.598z\"\n        fill={fill}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nexport const WebLink = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={32} height={31} viewBox=\"0 0 16 16\" fill={props.color} {...props}>\n    <Path d=\"M4.715 6.542L3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.001 1.001 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z\"/>\n    <Path d=\"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 0 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 0 0-4.243-4.243L6.586 4.672z\"/>\n  </Svg>\n));\n\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const Logo = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n\n  if (mode === 'dark') {\n    return (\n      // @ts-ignore\n      <Svg width={45} height={22} viewBox=\"0 0 45 22\" fill=\"none\" {...props}>\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 7.29c0 3.99 2.85 6.84 6.66 6.84 2.82 0 3.99-1.26 4.5-1.98h.36v2.4c0 2.4-1.41 3.72-3.9 3.72-1.899 0-3.007-.956-3.325-2.282l-3.854 1.157c.83 2.974 3.571 4.666 7.179 4.666 4.47 0 7.86-2.55 7.86-7.5V6.96c0-4.11-3.27-7.02-7.68-6.96C5.24.06 2 2.94 2 7.29zm7.74 3.75c-2.25 0-3.78-1.47-3.78-3.75 0-2.28 1.59-3.75 3.78-3.75 2.19 0 3.78 1.41 3.78 3.75 0 2.28-1.53 3.75-3.78 3.75zM23.79.42l-5.4 9.48h4.14l2.94-5.28h.36v16.8h3.96v-21h-6zm7.755 9.48l5.4-9.48h6v21h-3.96V4.62h-.36l-2.94 5.28h-4.14z\"\n          fill=\"#EDEDED\"\n        />\n        <Path fill=\"#33F\" d=\"M0 11h45v4H0z\" />\n      </Svg>\n    );\n  }\n\n  return (\n    // @ts-ignore\n    <Svg width={45} height={22} viewBox=\"0 0 45 22\" fill=\"none\" {...props}>\n      <Path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2 7.29c0 3.99 2.85 6.84 6.66 6.84 2.82 0 3.99-1.26 4.5-1.98h.36v2.4c0 2.4-1.41 3.72-3.9 3.72-1.899 0-3.007-.956-3.325-2.282l-3.854 1.157c.83 2.974 3.571 4.666 7.179 4.666 4.47 0 7.86-2.55 7.86-7.5V6.96c0-4.11-3.27-7.02-7.68-6.96C5.24.06 2 2.94 2 7.29zm7.74 3.75c-2.25 0-3.78-1.47-3.78-3.75 0-2.28 1.59-3.75 3.78-3.75 2.19 0 3.78 1.41 3.78 3.75 0 2.28-1.53 3.75-3.78 3.75zM23.79.42l-5.4 9.48h4.14l2.94-5.28h.36v16.8h3.96v-21h-6zm7.755 9.48l5.4-9.48h6v21h-3.96V4.62h-.36l-2.94 5.28h-4.14z\"\n        fill=\"#000\"\n      />\n      <Path fill=\"#33F\" d=\"M0 11h45v4H0z\" />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport Svg, { G, Mask, Path } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const MentalHealth = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#3333ff' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={29} height={36} viewBox=\"0 0 29 36\" fill=\"none\" {...props}>\n      <Path\n        d=\"M18.2639 6.4104C19.0549 6.56065 19.832 6.86895 20.5242 7.37004C23.2082 9.22971 23.8725 12.9234 21.9973 15.6044C19.6122 19.0241 14.8862 19.878 11.4635 17.5084C8.04372 15.1233 7.18982 10.3973 9.55942 6.97461C9.86789 6.53504 10.4675 6.42396 10.9071 6.73243C11.3466 7.0409 11.4577 7.64051 11.1493 8.08008C9.37813 10.6362 10.0099 14.163 12.566 15.9341C15.1221 17.7052 18.6489 17.0735 20.42 14.5174C21.6783 12.7155 21.2206 10.2181 19.4187 8.95987C17.6169 7.70163 15.1195 8.1593 13.8613 9.96116C13.1285 11.0272 13.381 12.4893 14.4471 13.2221C14.9583 13.5763 15.5758 13.7097 16.1909 13.6015C16.806 13.4934 17.3383 13.1446 17.6925 12.6333C17.8025 12.4775 17.8378 12.2913 17.8052 12.1245C17.7756 11.9421 17.678 11.7789 17.5192 11.6844C17.2075 11.4645 16.7747 11.543 16.5548 11.8548C16.2463 12.2944 15.6467 12.4054 15.2072 12.097C14.7676 11.7885 14.6565 11.1889 14.965 10.7493C15.7834 9.57099 17.4153 9.27032 18.6092 10.0917C19.1766 10.4887 19.5601 11.0919 19.6875 11.7749C19.8149 12.458 19.6668 13.153 19.2668 13.7359C18.6226 14.6741 17.6377 15.2905 16.522 15.4964C15.4062 15.7023 14.2643 15.4532 13.329 14.7935C11.3994 13.4467 10.9246 10.7853 12.2559 8.85273C13.661 6.86987 16.0304 5.98615 18.2639 6.4104Z\"\n        fill={fill}\n      />\n      <Mask id=\"path-2-inside-1\" fill=\"white\">\n        <Path d=\"M16.8256 0.0378956C17.8949 0.0882988 18.9561 0.274115 19.9768 0.578617L22.1833 1.45392C23.8751 2.30304 25.359 3.49498 26.4467 4.93566C28.2316 7.30453 29.2072 11.4474 28.7162 14.5729C28.2314 17.6593 26.4517 21.2138 25.4016 22.6442C24.4892 23.884 24.0488 24.7715 24.0151 25.4379C23.8857 27.9845 24.4495 30.4638 26.025 34.2673L26.2889 34.6805C26.4856 34.9882 26.3972 35.3983 26.0916 35.5964C25.7857 35.7947 25.901 35.7478 25.1818 35.729L8.97283 35.7064C8.83652 35.7064 8.69908 35.6639 8.5812 35.5758C8.28925 35.3578 8.2281 34.9427 8.44469 34.6488L8.78871 34.1818C9.04543 33.6645 9.14491 33.4464 9.22855 32.7092C9.36238 31.5376 9.13796 30.2766 8.90514 29.5525C8.87324 29.4724 8.60792 29.2659 8.26538 29.2605C7.92405 29.2541 7.5654 29.2894 7.18561 29.3268L7.171 29.3283L7.16237 29.3291L7.16166 29.3292C6.31802 29.4121 5.26834 29.5154 3.85078 29.2532C3.2866 29.1482 2.80441 28.8231 2.49229 28.3377C1.84551 27.3312 2.05976 25.897 2.24505 25.1315C2.25393 25.0942 2.25722 25.0697 2.25839 25.0556C2.2373 25.0243 2.19037 24.9678 2.15462 24.9248C1.96434 24.696 1.64587 24.313 1.657 23.7194L1.65608 23.6975C1.65001 23.5398 1.65463 23.3343 1.7204 23.1086C1.13698 22.2202 1.55642 21.3302 1.70685 21.0111L1.70686 21.011L1.74896 20.9208C1.77022 20.8738 1.7889 20.8305 1.80533 20.7906C1.30044 20.6219 0.183928 20.1973 0.0180839 18.9477C-0.123053 17.9304 0.572505 16.911 1.73486 15.3536L1.98423 15.0185C2.80795 13.9048 2.75118 13.3667 2.58686 12.9873C2.03759 11.7218 2.27518 10.9075 2.52674 10.0453L2.5268 10.0451C2.5912 9.8246 2.63716 9.54832 2.69534 9.19849C2.72487 9.02098 2.75689 8.82868 2.79537 8.61905C3.09532 6.9839 4.06018 3.94394 7.15192 1.95766C9.53212 0.428742 12.5154 -0.162989 16.8256 0.0378956Z\" />\n      </Mask>\n      <Path\n        d=\"M16.8256 0.0378956C17.8949 0.0882988 18.9561 0.274115 19.9768 0.578617L22.1833 1.45392C23.8751 2.30304 25.359 3.49498 26.4467 4.93566C28.2316 7.30453 29.2072 11.4474 28.7162 14.5729C28.2314 17.6593 26.4517 21.2138 25.4016 22.6442C24.4892 23.884 24.0488 24.7715 24.0151 25.4379C23.8857 27.9845 24.4495 30.4638 26.025 34.2673L26.2889 34.6805C26.4856 34.9882 26.3972 35.3983 26.0916 35.5964C25.7857 35.7947 25.901 35.7478 25.1818 35.729L8.97283 35.7064C8.83652 35.7064 8.69908 35.6639 8.5812 35.5758C8.28925 35.3578 8.2281 34.9427 8.44469 34.6488L8.78871 34.1818C9.04543 33.6645 9.14491 33.4464 9.22855 32.7092C9.36238 31.5376 9.13796 30.2766 8.90514 29.5525C8.87324 29.4724 8.60792 29.2659 8.26538 29.2605C7.92405 29.2541 7.5654 29.2894 7.18561 29.3268L7.171 29.3283L7.16237 29.3291L7.16166 29.3292C6.31802 29.4121 5.26834 29.5154 3.85078 29.2532C3.2866 29.1482 2.80441 28.8231 2.49229 28.3377C1.84551 27.3312 2.05976 25.897 2.24505 25.1315C2.25393 25.0942 2.25722 25.0697 2.25839 25.0556C2.2373 25.0243 2.19037 24.9678 2.15462 24.9248C1.96434 24.696 1.64587 24.313 1.657 23.7194L1.65608 23.6975C1.65001 23.5398 1.65463 23.3343 1.7204 23.1086C1.13698 22.2202 1.55642 21.3302 1.70685 21.0111L1.70686 21.011L1.74896 20.9208C1.77022 20.8738 1.7889 20.8305 1.80533 20.7906C1.30044 20.6219 0.183928 20.1973 0.0180839 18.9477C-0.123053 17.9304 0.572505 16.911 1.73486 15.3536L1.98423 15.0185C2.80795 13.9048 2.75118 13.3667 2.58686 12.9873C2.03759 11.7218 2.27518 10.9075 2.52674 10.0453L2.5268 10.0451C2.5912 9.8246 2.63716 9.54832 2.69534 9.19849C2.72487 9.02098 2.75689 8.82868 2.79537 8.61905C3.09532 6.9839 4.06018 3.94394 7.15192 1.95766C9.53212 0.428742 12.5154 -0.162989 16.8256 0.0378956Z\"\n        stroke={fill}\n        strokeWidth={3.5}\n        mask=\"url(#path-2-inside-1)\"\n      />\n    </Svg>\n  );\n});\n","import React, {memo} from 'react';\nimport Svg, { Mask, Path } from 'react-native-svg';\n\nexport const Noise = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={33} height={30} viewBox=\"0 0 33 30\" fill=\"none\" {...props}>\n    <Path\n      d=\"M21.487 21.669a1.064 1.064 0 01-1.032-1.236c.342-2.188-.537-2.933-1.753-3.963-.928-.786-1.98-1.677-2.254-3.27-.132-.77-.479-3.435.607-5.37.5-.89 1.305-1.551 2.393-1.963.752-.284 1.631-.45 2.687-.505 1.035-.054 1.973.119 2.79.514.896.433 1.625 1.123 2.167 2.05 1.198 2.053.408 4.527-.291 6.21a1.035 1.035 0 01-1.368.564 1.076 1.076 0 01-.552-1.4c.827-1.992.96-3.352.42-4.279-.644-1.101-1.645-1.601-3.06-1.527-1.796.094-2.9.552-3.376 1.4-.586 1.044-.561 2.773-.362 3.937.134.78.668 1.266 1.53 1.995.658.558 1.404 1.19 1.927 2.113.608 1.076.79 2.33.556 3.83-.082.525-.525.9-1.029.9z\"\n      fill=\"#33F\"\n    />\n    <Path\n      d=\"M20.637 29.283c-.308 0-.615-.027-.922-.08-.925-.16-1.796-.557-2.587-1.18-1.52-1.194-1.563-2.825-1.604-4.401a55.85 55.85 0 00-.016-.521 1.062 1.062 0 112.12-.077c.007.186.012.366.017.541.04 1.49.09 2.231.792 2.784.98.77 2.13.997 3.24.637 1.281-.415 2.328-1.548 2.734-2.958.108-.377.205-.75.298-1.11.35-1.348.68-2.62 1.547-4 .337-.537.695-1.054 1.042-1.555.724-1.044 1.407-2.03 1.876-3.136 1.137-2.682.996-6-.35-8.258-1.59-2.67-4.105-3.834-6.568-3.834-3.092 0-5.617.887-6.955 3.774-1.113 1.944-1.22 3.153-1.24 6.111a1.062 1.062 0 01-1.062 1.057h-.007a1.063 1.063 0 01-1.054-1.072c.021-2.991.099-4.668 1.523-7.156.786-1.373 2.14-3.404 4.026-4.044 1.3-.44 2.824-.701 4.66-.795 1.718-.089 3.226.451 4.592.992 2.02 1.01 3.044 2.426 3.907 3.875.86 1.443 1.347 3.196 1.409 5.07.058 1.774-.263 3.542-.928 5.112-.555 1.309-1.333 2.432-2.086 3.519-.334.48-.678.978-.99 1.474-.69 1.1-.967 2.167-1.288 3.402-.097.374-.198.76-.314 1.164a6.745 6.745 0 01-1.564 2.757 6.14 6.14 0 01-2.555 1.636 5.474 5.474 0 01-1.693.272z\"\n      fill=\"#33F\"\n    />\n    <Mask id=\"prefix__a\" fill=\"#fff\">\n      <Path d=\"M6.525 15.875c0 2.445-.853 4.72-2.331 6.54-.455.568-.398 1.478.17 1.933l.057.057c.626.512 1.535.455 2.047-.17 1.877-2.275 2.957-5.175 2.957-8.36 0-3.184-1.137-6.084-2.957-8.359-.512-.625-1.421-.682-2.047-.17l-.057.056c-.568.512-.682 1.365-.17 1.934 1.421 1.82 2.331 4.037 2.331 6.54z\" />\n    </Mask>\n    <Path\n      d=\"M6.525 15.875c0 2.445-.853 4.72-2.331 6.54-.455.568-.398 1.478.17 1.933l.057.057c.626.512 1.535.455 2.047-.17 1.877-2.275 2.957-5.175 2.957-8.36 0-3.184-1.137-6.084-2.957-8.359-.512-.625-1.421-.682-2.047-.17l-.057.056c-.568.512-.682 1.365-.17 1.934 1.421 1.82 2.331 4.037 2.331 6.54z\"\n      fill=\"#33F\"\n      stroke=\"#fff\"\n      strokeWidth={0.5}\n      mask=\"url(#prefix__a)\"\n    />\n    <Mask id=\"prefix__b\" fill=\"#fff\">\n      <Path d=\"M.497 20.993c.626.512 1.536.455 2.048-.17a7.903 7.903 0 001.706-4.948 7.903 7.903 0 00-1.706-4.947c-.512-.626-1.422-.683-2.048-.17a1.418 1.418 0 00-.17 1.933c.682.91 1.08 1.99 1.08 3.184 0 1.194-.398 2.332-1.08 3.185-.512.625-.398 1.478.17 1.933z\" />\n    </Mask>\n    <Path\n      d=\"M.497 20.993c.626.512 1.536.455 2.048-.17a7.903 7.903 0 001.706-4.948 7.903 7.903 0 00-1.706-4.947c-.512-.626-1.422-.683-2.048-.17a1.418 1.418 0 00-.17 1.933c.682.91 1.08 1.99 1.08 3.184 0 1.194-.398 2.332-1.08 3.185-.512.625-.398 1.478.17 1.933z\"\n      fill=\"#33F\"\n      stroke=\"#fff\"\n      strokeWidth={0.5}\n      mask=\"url(#prefix__b)\"\n    />\n  </Svg>\n));\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nexport const Not911 = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={34} height={33} viewBox=\"0 0 34 33\" fill=\"none\" {...props}>\n    <Path\n      d=\"M14 17.6H3V8h11v20H0M22 5v26M30 5v26\"\n      stroke=\"#000\"\n      strokeWidth={6}\n    />\n    <Path fill=\"#fff\" d=\"M3.485 32.957L1 30.473 30.803.67l2.484 2.484z\" />\n  </Svg>\n));\n","import React, { memo } from 'react';\nimport Svg, { Mask, Path } from 'react-native-svg';\n\nexport const Phone = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={32} height={31} fill=\"none\" {...props}>\n    <Mask\n      id=\"prefix__a\"\n      // @ts-ignore\n      maskUnits=\"userSpaceOnUse\"\n      x={0}\n      y={0}\n      width={32}\n      height={31}\n      fill=\"#000\"\n    >\n      <Path fill=\"#fff\" d=\"M0 0h32v31H0z\" />\n      <Path d=\"M28.04 19.86c-2.07-1.66-3.8-1.7-5.93-.18-.36.25-1.4 1.18-1.52 1.28-.2.18-.63.29-.88.23-.02 0-1.9-.52-5.51-3.95-3.55-3.49-4.08-5.3-4.08-5.32-.06-.24.05-.67.23-.86.1-.11 1.07-1.12 1.33-1.46 1.58-2.07 1.52-3.74-.19-5.74C10.33 2.5 8.9 1.09 7.04 1c-1.4-.06-2.84.63-4.38 2.12A5.76 5.76 0 001.22 8.8c.1.54 1.32 6.64 8.09 13.18 6.76 6.54 13.07 7.72 13.63 7.81a6.6 6.6 0 001.68.22c1.58 0 3.11-.57 4.18-1.6 1.55-1.5 2.26-2.88 2.2-4.24-.1-1.8-1.55-3.18-2.96-4.3zm0 7.8a5.14 5.14 0 01-4.84 1.1h-.06c-.06-.02-6.38-1.07-13.06-7.53C3.4 14.78 2.3 8.66 2.29 8.59l-.01-.05a4.73 4.73 0 011.14-4.67C4.74 2.6 5.92 2 7 2.05c1.43.07 2.66 1.3 3.66 2.48 1.4 1.64 1.44 2.76.15 4.44-.19.25-.97 1.08-1.25 1.38a2.11 2.11 0 00-.49 1.82c.02.08.52 1.96 4.1 5.54l.55.54c3.7 3.45 5.65 3.94 5.74 3.96a2.31 2.31 0 001.88-.47c.3-.28 1.16-1.03 1.42-1.22 1.75-1.24 2.9-1.2 4.6.15 1.23.97 2.49 2.16 2.56 3.54.05 1.05-.56 2.18-1.88 3.45z\" />\n    </Mask>\n    <Path\n      d=\"M28.04 19.86c-2.07-1.66-3.8-1.7-5.93-.18-.36.25-1.4 1.18-1.52 1.28-.2.18-.63.29-.88.23-.02 0-1.9-.52-5.51-3.95-3.55-3.49-4.08-5.3-4.08-5.32-.06-.24.05-.67.23-.86.1-.11 1.07-1.12 1.33-1.46 1.58-2.07 1.52-3.74-.19-5.74C10.33 2.5 8.9 1.09 7.04 1c-1.4-.06-2.84.63-4.38 2.12A5.76 5.76 0 001.22 8.8c.1.54 1.32 6.64 8.09 13.18 6.76 6.54 13.07 7.72 13.63 7.81a6.6 6.6 0 001.68.22c1.58 0 3.11-.57 4.18-1.6 1.55-1.5 2.26-2.88 2.2-4.24-.1-1.8-1.55-3.18-2.96-4.3zm0 7.8a5.14 5.14 0 01-4.84 1.1h-.06c-.06-.02-6.38-1.07-13.06-7.53C3.4 14.78 2.3 8.66 2.29 8.59l-.01-.05a4.73 4.73 0 011.14-4.67C4.74 2.6 5.92 2 7 2.05c1.43.07 2.66 1.3 3.66 2.48 1.4 1.64 1.44 2.76.15 4.44-.19.25-.97 1.08-1.25 1.38a2.11 2.11 0 00-.49 1.82c.02.08.52 1.96 4.1 5.54l.55.54c3.7 3.45 5.65 3.94 5.74 3.96a2.31 2.31 0 001.88-.47c.3-.28 1.16-1.03 1.42-1.22 1.75-1.24 2.9-1.2 4.6.15 1.23.97 2.49 2.16 2.56 3.54.05 1.05-.56 2.18-1.88 3.45z\"\n      fill={props.color}\n    />\n    <Path\n      d=\"M28.04 19.86c-2.07-1.66-3.8-1.7-5.93-.18 0 0 0 0 0 0s0 0 0 0c-.36.25-1.4 1.18-1.52 1.28-.2.18-.63.29-.88.23-.02 0-1.9-.52-5.51-3.95-3.55-3.49-4.08-5.3-4.08-5.32-.06-.24.05-.67.23-.86.1-.11 1.07-1.12 1.33-1.46 0 0 0 0 0 0 1.58-2.07 1.52-3.74-.19-5.74C10.33 2.5 8.9 1.09 7.04 1c-1.4-.06-2.84.63-4.38 2.12A5.76 5.76 0 001.22 8.8c.1.54 1.32 6.64 8.09 13.18 6.76 6.54 13.07 7.72 13.63 7.81a6.6 6.6 0 001.68.22c1.58 0 3.11-.57 4.18-1.6 1.55-1.5 2.26-2.88 2.2-4.24-.1-1.8-1.55-3.18-2.96-4.3zm0 7.8a5.14 5.14 0 01-4.84 1.1h-.06c-.06-.02-6.38-1.07-13.06-7.53C3.4 14.78 2.3 8.66 2.29 8.59l-.01-.05a4.73 4.73 0 011.14-4.67C4.74 2.6 5.92 2 7 2.05c1.43.07 2.66 1.3 3.66 2.48 1.4 1.64 1.44 2.76.15 4.44 0 0 0 0 0 0-.19.25-.97 1.08-1.25 1.38a2.11 2.11 0 00-.49 1.82c.02.08.52 1.96 4.1 5.54l.55.54c3.7 3.45 5.65 3.94 5.74 3.96a2.31 2.31 0 001.88-.47c.3-.28 1.16-1.03 1.42-1.22 1.75-1.24 2.9-1.2 4.6.15 1.23.97 2.49 2.16 2.56 3.54.05 1.05-.56 2.18-1.88 3.45z\"\n      stroke={props.color}\n      mask=\"url(#prefix__a)\"\n    />\n  </Svg>\n));\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport { useTheme } from '../context';\n\nexport const DrugsOrPoisoning = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const { mode }: { mode: 'light' | 'dark' } = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={23} height={36} viewBox=\"0 0 23 36\" fill=\"none\" {...props}>\n      <Path\n        d=\"M19.295 9.408l-3.83-2.09v-1.46h.606a.607.607 0 00.607-.608V1.607A.607.607 0 0016.072 1H6.357a.607.607 0 00-.607.607V5.25a.607.607 0 00.607.607h.607v1.461l-3.83 2.09a5.463 5.463 0 00-2.848 4.797V30.75A4.255 4.255 0 004.536 35h13.357a4.255 4.255 0 004.25-4.25V14.205a5.463 5.463 0 00-2.848-4.797zm-3.83-2.09h-.608.607v0zm-8.5-5.104h8.5v2.429h-8.5V2.214zm-3.25 8.26l3.83-2.09a1.212 1.212 0 00.633-1.066v-1.46h6.072v1.46a1.214 1.214 0 00.633 1.066l3.83 2.09a4.249 4.249 0 012.215 3.73v.153H1.5v-.152a4.249 4.249 0 012.215-3.731zm17.213 18.455H1.5V15.57h19.428V28.93zm-3.035 4.857H4.536A3.04 3.04 0 011.5 30.75v-.607h19.428v.607a3.04 3.04 0 01-3.035 3.036zm-11.83-8.102l1.717 1.718a.607.607 0 00.858 0l2.576-2.576 2.576 2.576a.607.607 0 00.859 0l1.717-1.718a.607.607 0 000-.858L13.79 22.25l2.576-2.576a.607.607 0 000-.859l-1.717-1.717a.607.607 0 00-.859 0l-2.576 2.576-2.576-2.576a.607.607 0 00-.858 0l-1.718 1.717a.607.607 0 000 .859l2.576 2.576-2.576 2.576a.607.607 0 000 .858zm3.863-3.005a.608.608 0 000-.858L7.35 19.245l.859-.859 2.576 2.576a.625.625 0 00.858 0l2.577-2.576.858.859-2.576 2.576a.607.607 0 000 .858l2.576 2.576-.858.859-2.577-2.576a.607.607 0 00-.858 0l-2.576 2.576-.859-.86 2.576-2.575z\"\n        fill={fill}\n        stroke={fill}\n        strokeWidth={0.25}\n      />\n    </Svg>\n  );\n});\n","import React, {memo} from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nexport const Settings = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg\n    height={28}\n    width={28}\n    viewBox=\"0 0 64 64\"\n    {...props}\n  >\n    <Path\n      fill={props.color}\n      d=\"M56.083 27.003l-5.911-.492a18.958 18.958 0 00-1.44-3.48l3.83-4.527a1 1 0 00-.056-1.353l-5.656-5.657a.998.998 0 00-1.353-.056l-4.527 3.83a18.854 18.854 0 00-3.482-1.44l-.492-5.911A1 1 0 0036 7h-8a1 1 0 00-.996.917l-.492 5.911a18.854 18.854 0 00-3.482 1.44l-4.527-3.83a.998.998 0 00-1.353.056l-5.656 5.657a1 1 0 00-.057 1.353l3.83 4.527a18.958 18.958 0 00-1.439 3.48l-5.911.492A1 1 0 007 28v8a1 1 0 00.917.997l5.911.492a18.958 18.958 0 001.44 3.48l-3.83 4.527a1 1 0 00.056 1.353l5.656 5.657a1 1 0 001.353.056l4.527-3.83a18.854 18.854 0 003.482 1.44l.492 5.911A1 1 0 0028 57h8a1 1 0 00.996-.917l.492-5.911a18.854 18.854 0 003.482-1.44l4.527 3.83a.999.999 0 001.353-.056l5.656-5.657a1 1 0 00.056-1.353l-3.83-4.527a18.958 18.958 0 001.44-3.48l5.911-.492A1 1 0 0057 36v-8a1 1 0 00-.917-.997zM55 35.08l-5.686.474a1 1 0 00-.884.743 16.928 16.928 0 01-1.772 4.283 1 1 0 00.099 1.151l3.684 4.354-4.355 4.356-4.355-3.684a.998.998 0 00-1.15-.099 16.869 16.869 0 01-4.283 1.771 1 1 0 00-.744.885L35.08 55h-6.16l-.474-5.686a1 1 0 00-.744-.885 16.869 16.869 0 01-4.282-1.77.999.999 0 00-1.151.098l-4.355 3.684-4.355-4.356 3.684-4.354a1 1 0 00.099-1.151 16.928 16.928 0 01-1.772-4.283 1 1 0 00-.884-.743L9 35.08v-6.16l5.686-.474a1 1 0 00.884-.743 16.928 16.928 0 011.772-4.283 1 1 0 00-.099-1.151l-3.684-4.354 4.355-4.356 4.355 3.684a.998.998 0 001.15.099 16.869 16.869 0 014.283-1.771 1 1 0 00.744-.885L28.92 9h6.16l.474 5.686a1 1 0 00.744.885 16.869 16.869 0 014.282 1.77.997.997 0 001.151-.098l4.355-3.684 4.355 4.356-3.684 4.354a1 1 0 00-.099 1.151 16.928 16.928 0 011.772 4.283 1 1 0 00.884.743L55 28.92z\" />\n    <Path\n      fill={props.color}\n      d=\"M32 23a9 9 0 109 9 9.01 9.01 0 00-9-9zm0 16a7 7 0 117-7 7.008 7.008 0 01-7 7z\"\n    />\n  </Svg>\n));\n","import React, { memo } from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nexport const TextMessage = memo((props: React.SVGProps<SVGSVGElement>) => (\n  // @ts-ignore\n  <Svg width={32} height={31} viewBox=\"0 0 16 16\" fill={props.color} {...props}>\n    <Path fillRule=\"evenodd\" d=\"M2 1h12a1 1 0 0 1 1 1v11.586l-2-2A2 2 0 0 0 11.586 11H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12z\"/>\n    <Path fillRule=\"evenodd\" d=\"M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6zm0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\n  </Svg>\n));\n","import React, {memo} from 'react';\nimport Svg, { Path } from 'react-native-svg';\n\nimport {useTheme} from '../context';\n\nexport const Violence = memo((props: React.SVGProps<SVGSVGElement>) => {\n  const {mode}: {mode: 'light' | 'dark'} = useTheme();\n  const fill = mode === 'light' ? '#33F' : '#fff';\n\n  return (\n    // @ts-ignore\n    <Svg width={33} height={25} viewBox=\"0 0 33 25\" fill=\"none\" {...props}>\n      <Path\n        d=\"M7.686 17.085c.893 2.81 4.644 3.692 6.683 1.35 1.09 2.356 3.53 2.235 3.595 2.255v.609c0 1.484 1.219 2.692 2.745 2.692h.001c3.229-.138 4.914.421 7.09-.833.04-.023.028-.011.061-.041.035-.022.092-.052.166-.09 2.514-1.34 3.788-3.26 3.785-5.654.044-.492.412-4.854-.02-6.409-.47-1.735-2.982-5.376-3.96-6.788-1.766-2.83-4.09-.77-7.073-2.272-1.824-.915-3.577-1.297-5.583-.372-1.297.398-1.115 1.072-4.375.991-1.856-.05-3.37.017-4.36 1.73-.68 1.202-1.94 1.055-2.005 1.07C2.54 5.324 1 6.844 1 8.712v5.685c0 3.41 4.232 5.165 6.686 2.69zm20.635-.253c-.048-4.22-.018-6.816.002-8.534l.01-1.082c1.053 1.631 1.987 3.249 2.214 4.082.313 1.133.09 4.69-.024 6.02 0 2.625-1.774 3.874-3.108 4.585-.136.072-.226.12-.3.173-1.775 1.007-3.285.498-6.433.64-1.762 0-1.396-2.152-1.427-2.26.697-.252 1.462-.813 1.916-1.49 2.094 3.132 7.15 1.723 7.15-2.134zm-26.03-8.12c0-1.165.962-2.112 2.145-2.112.064-.017 2.069.159 3.13-1.72.79-1.368 2.132-1.068 4-1.068 2.507 0 3.269-.821 4.159-1.125 3.126-1.442 3.983 1.127 7.85 1.127 1.35.076 2.363-.28 3.172 1.047.2.348.315 12.059.228 12.503-.626 2.99-5.156 2.545-5.156-.525 0-.005-.003-.008-.003-.014v-6.46a.642.642 0 00-.646-.639.642.642 0 00-.645.638l.001 6.489c-.007 1.258-.94 2.473-2.614 2.564-1.435 0-2.602-1.157-2.602-2.578l-.001-.91v-5.565a.642.642 0 00-.646-.638.642.642 0 00-.646.638v.155l.001 5.415c0 2.267-2.785 3.442-4.453 1.81-.844-.824-.75-1.748-.763-1.815v-5.565a.642.642 0 00-.646-.638.642.642 0 00-.646.638v4.032c0 2.284-2.823 3.428-4.452 1.82-1.268-1.253-.567-2.492-.767-7.505z\"\n        fill={fill}\n        stroke={fill}\n        strokeWidth={0.75}\n      />\n    </Svg>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Styles } from '../constants';\nimport {\n  Caret,\n  DrugsOrPoisoning,\n  Homelessness,\n  LegalSupport,\n  MentalHealth,\n  Violence,\n} from '../svgs';\nimport { Text, View } from './Themed';\n\ntype Props = {\n  includeIcon?: true,\n  isLast?: boolean,\n  navigation: any,\n  city?: string,\n  saveLocation?: Function,\n  to: 'CategoryScreen' | 'PhoneNumberListScreen',\n  category: string,\n};\n\n/**\n * @description Generic category link. optional icon\n */\nexport const CategoryLink = memo((props: Props) => {\n  const { isLast = false, category } = props;\n  if (typeof category !== 'string') return null;\n\n  const re = /\\s+/gi;\n  const section = category.toLowerCase().replace(re, '');\n\n  return (\n    <>\n      <TouchableOpacity\n        style={styles.row}\n        onPress={() => {\n          props.navigation.navigate(\n            props.to,\n            { section },\n          );\n        }}>\n        {/* {props.includeIcon && (\n          <View\n            lightColor={Styles.white}\n            darkColor={Styles.blue}\n            style={styles.marginRight10}>\n            {category === 'Violence'\n              && (\n                <Violence />\n              )}\n            {category === 'Mental Health'\n              && (\n                <MentalHealth />\n              )}\n            {category === 'Homelessness & Housing'\n              && (\n                <Homelessness />\n              )}\n            {category === 'Legal Support'\n              && (\n                <LegalSupport />\n              )}\n            {category === 'Drugs or Poisoning'\n              && (\n                <DrugsOrPoisoning />\n              )}\n          </View>\n        )} */}\n        <Text\n          lightColor={Styles.blue}\n          darkColor={Styles.white}\n          style={styles.text}>\n          {category}\n        </Text>\n        <Caret />\n      </TouchableOpacity>\n      {!isLast && (\n        <View\n          style={Styles.separator}\n          lightColor={Styles.gray}\n          darkColor={Styles.white}\n        />\n      )}\n    </>\n  );\n});\n\nconst styles = StyleSheet.create({\n  marginRight10: {\n    marginRight: 10,\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 25,\n    width: '100%',\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    lineHeight: 20,\n  },\n});\n","import React, { memo } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Styles } from '../constants';\nimport {\n  Caret,\n} from '../svgs';\nimport { Text, View } from './Themed';\n\ntype Props = {\n  includeIcon?: true,\n  isLast?: boolean,\n  navigation: any,\n  city?: string,\n  saveLocation?: Function,\n  to: 'CategoryScreen' | 'PhoneNumberListScreen',\n  route: string,\n};\n\n/**\n * @description Generic category link. optional icon\n */\nexport const CityLink = memo((props: Props) => {\n  const { isLast, route } = props;\n\n  return (\n    <>\n      <TouchableOpacity\n        style={styles.row}\n        onPress={() => {\n          if (props.saveLocation) {\n            props.saveLocation(route);\n          }\n          props.navigation.navigate(\n            props.to,\n            { location: route },\n          );\n        }}>\n        {props.includeIcon && (\n          <View\n            lightColor={Styles.white}\n            darkColor={Styles.blue}\n            style={styles.marginRight10} />\n        )}\n        <Text\n          lightColor={Styles.blue}\n          darkColor={Styles.white}\n          style={styles.text}>\n          {route}\n        </Text>\n        <Caret />\n      </TouchableOpacity>\n      {!isLast && (\n        <View\n          style={Styles.separator}\n          lightColor={Styles.gray}\n          darkColor={Styles.white}\n        />\n      )}\n    </>\n  );\n});\n\nconst styles = StyleSheet.create({\n  marginRight10: {\n    marginRight: 10,\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 25,\n    width: '100%',\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    lineHeight: 20,\n  },\n});\n","import * as Linking from 'expo-linking';\nimport * as React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Styles } from '../constants';\nimport { Phone, TextMessage, WebLink } from '../svgs';\nimport { View } from './Themed';\n\ninterface IconGroupProps {\n  crisis?: boolean;\n  tel?: string;\n  text?: { content?: string; number: string; }\n  website?: string;\n}\n\nexport const IconGroup: React.FC<IconGroupProps> = ({ crisis, tel, text, website }) => {\n\n  const LETTER_TO_TELEPHONE_NUMBER: { [key: string]: string } = {\n    'ABC': '2',\n    'DEF': '3',\n    'GHI': '4',\n    'JKL': '5',\n    'MNO': '6',\n    'PQRS': '7',\n    'TUV': '8',\n    'WXYZ': '9',\n  };\n\n  const formatTextNumber = (textNumber: string) => {\n    const letterExp = /[A-Za-z]/g;\n    const digitExp = /\\d/g;\n    let textNumberWithoutLetters: string = '';\n\n    for (let i = 0; i < textNumber.length; i++) {\n      const character = textNumber[i];\n      if (character.match(letterExp)) {\n        // Replace the letter with corresponding number\n        const [matchingTelephoneLetters] =\n          Object.keys(LETTER_TO_TELEPHONE_NUMBER)\n            .filter(letterGroups => letterGroups.includes(character.toUpperCase()));\n        textNumberWithoutLetters += LETTER_TO_TELEPHONE_NUMBER[matchingTelephoneLetters];\n      } else if (character.match(digitExp)) {\n        // If not a letter, don't replace with a number\n        textNumberWithoutLetters += character;\n      }\n    }\n\n    return textNumberWithoutLetters;\n  };\n\n  return (\n    <View\n      darkColor={Styles.black}\n      lightColor={Styles.white}\n      style={styles.iconGroup}\n    >\n      {tel && <TouchableOpacity\n        style={[\n          styles.phoneWrap,\n          crisis && { backgroundColor: Styles.orange },\n        ]}\n        onPress={() => Linking.openURL(`tel://${tel}`)}>\n        <Phone color={Styles.white} />\n      </TouchableOpacity>}\n      {text && <TouchableOpacity\n        style={[\n          styles.phoneWrap,\n          crisis && { backgroundColor: Styles.orange },\n        ]}\n        onPress={() => Linking.openURL(`sms:${formatTextNumber(text.number)}?&body=${encodeURI(text.content || '')}`)}>\n        <TextMessage color={Styles.white} />\n      </TouchableOpacity>}\n      {website && <TouchableOpacity\n        style={[\n          styles.phoneWrap,\n          crisis && { backgroundColor: Styles.orange },\n        ]}\n        onPress={() => Linking.openURL(website)}>\n        <WebLink color={Styles.white} />\n      </TouchableOpacity>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  iconGroup: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  phoneWrap: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: Styles.blue,\n    borderRadius: 1000,\n    flex: 1,\n    flexGrow: 0,\n    flexBasis: 70,\n    height: 70,\n    justifyContent: 'center',\n    marginLeft: 5,\n    marginRight: 5,\n    padding: 20,\n    width: 70,\n  },\n});\n","import * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n      } catch (err) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(err);\n      } finally {\n        setLoadingComplete(true);\n        await SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","export { BottomTabNavigator } from './BottomTabNavigator';\nexport { HomeStackNavigator } from './HomeStackNavigator';\nexport { LinkingConfiguration } from './LinkingConfiguration';\nexport { Navigation } from './Navigation';\n","export { AboutScreen } from './AboutScreen';\nexport { CategoryScreen } from './CategoryScreen';\nexport { CitySelectScreen } from './CitySelectScreen';\nexport { NotFoundScreen } from './NotFoundScreen';\nexport { PhoneNumberListScreen } from './PhoneNumberListScreen';\nexport { SettingsScreen } from './SettingsScreen';\n","import * as Linking from 'expo-linking';\nimport flatten from 'lodash/flatten';\nimport uniq from 'lodash/uniq';\nimport React, { memo } from 'react';\nimport { ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { BackButton, CategoryLink, Text, View } from '../components';\nimport { Styles } from '../constants';\nimport { useCache, useLocation, useTheme } from '../context';\nimport { Phone } from '../svgs';\nimport { tCacheUnion } from '../types';\n\n/**\n * @description This component renders the available categories for the selected location. It gets the cities from the Airtable 'metaCategories' table.\n */\nexport const CategoryScreen = memo((props: any) => {\n  const { mode } = useTheme();\n  const { cache } = useCache();\n  const { location }: { location: tCacheUnion } = useLocation();\n  const { categories = [] } = cache;\n\n  let getUsedCategories: string[] = [];\n  try {\n    getUsedCategories = uniq(\n      // @ts-ignore\n      flatten(cache[location].map(r => r.fields.categories).filter(r => !!r)),\n    );\n  } catch (err) { }\n\n  const catsToRender = categories.filter(cat => getUsedCategories.includes(cat));\n\n  return (\n    <View\n      lightColor={Styles.white}\n      darkColor={Styles.blue}\n      style={styles.container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <View\n          lightColor={Styles.white}\n          darkColor={Styles.orange}\n          style={styles.danger}>\n          <Text\n            bold\n            lightColor={Styles.orange}\n            darkColor={Styles.white}\n            style={styles.dangerTxt}>\n            Life-threatening emergency?\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              Linking.openURL('tel://911');\n            }}>\n            <View\n              style={styles.dangerBtn}\n              lightColor={Styles.orange}\n              darkColor={Styles.white}>\n              <View\n                lightColor={Styles.orange}\n                darkColor={Styles.white}\n                style={styles.phoneWrap}>\n                <Phone\n                  color={mode === 'light' ? Styles.white : Styles.orange}\n                />\n              </View>\n              <Text\n                bold\n                lightColor={Styles.white}\n                darkColor={Styles.orange}\n                style={styles.dangerBtnTxt}>\n                Call 911\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <BackButton />\n        <View style={styles.innerView}>\n          <Text\n            bold\n            lightColor={Styles.black}\n            darkColor={Styles.white}\n            style={styles.title}>\n            {location}\n          </Text>\n        </View>\n        <View style={styles.innerView}>\n          <Text\n            bold\n            lightColor={Styles.black}\n            darkColor={Styles.white}\n            style={styles.title}>\n            What do you need help with?\n          </Text>\n          <View\n            style={Styles.separator}\n            lightColor={Styles.gray}\n            darkColor={Styles.white}\n          />\n          {catsToRender.map((cat, i) => (\n            <CategoryLink\n              key={cat}\n              includeIcon\n              to=\"PhoneNumberListScreen\"\n              isLast={i === catsToRender.length - 1}\n              navigation={props.navigation}\n              category={cat}\n            />\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  dangerTxt: {\n    fontSize: 18,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  danger: {\n    display: 'flex',\n    padding: 20,\n    marginBottom: 50,\n    width: '100%',\n  },\n  dangerBtnTxt: {\n    alignSelf: 'stretch',\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  dangerBtn: {\n    alignItems: 'center',\n    borderRadius: 6,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  phoneWrap: {\n    position: 'absolute',\n    left: 15,\n  },\n  community: {\n    padding: 20,\n    paddingTop: 30,\n  },\n  communityTxt: {\n    fontSize: 20,\n  },\n  container: {\n    flex: 1,\n  },\n  innerView: {\n    paddingHorizontal: 20,\n    // paddingTop: 40,\n    paddingBottom: 20,\n  },\n  marginBottom15: {\n    marginBottom: 15,\n  },\n  marginBottom30: {\n    marginBottom: 30,\n  },\n  marginVertical30: {\n    marginVertical: 30,\n  },\n  title: {\n    fontSize: 28,\n    lineHeight: 34,\n    marginBottom: 32,\n  },\n  blue: {\n    color: Styles.blue,\n  },\n  marginBottom40: {\n    marginBottom: 40,\n  },\n  trusted: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginBottom: 20,\n  },\n  marginRight10: {\n    marginRight: 10,\n  },\n});\n","import * as Linking from 'expo-linking';\nimport React, { memo } from 'react';\nimport { ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { CityLink, Text, View } from '../components';\nimport { Styles } from '../constants';\nimport { useCache, useLocation, useTheme } from '../context';\nimport { Phone } from '../svgs';\nimport { PhoneScreenNavigationProp } from '../types';\n\n/**\n * @description This component renders the city selection page. It gets the cities from the Airtable 'meta' table. This is the first page the user sees.\n */\nexport const CitySelectScreen = memo((props: {\n  navigation: PhoneScreenNavigationProp,\n}) => {\n  const { mode } = useTheme();\n  const { cache } = useCache();\n  const { saveLocation }: { saveLocation: Function } = useLocation();\n\n  // Sorts cities alphabetically by name.\n  const cities = Object.keys(cache)\n    .filter(key => key !== 'categories')\n    .sort((cityA: string, cityB: string) => cityA.localeCompare(cityB));\n\n  return (\n    <View\n      lightColor={Styles.white}\n      darkColor={Styles.blue}\n      style={styles.container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <View\n          lightColor={Styles.white}\n          darkColor={Styles.orange}\n          style={styles.danger}>\n          <Text\n            bold\n            lightColor={Styles.orange}\n            darkColor={Styles.white}\n            style={styles.dangerTxt}>\n            Life-threatening emergency?\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              Linking.openURL('tel://911');\n            }}>\n            <View\n              style={styles.dangerBtn}\n              lightColor={Styles.orange}\n              darkColor={Styles.white}>\n              <View\n                lightColor={Styles.orange}\n                darkColor={Styles.white}\n                style={styles.phoneWrap}>\n                <Phone\n                  color={mode === 'light' ? Styles.white : Styles.orange}\n                />\n              </View>\n              <Text\n                bold\n                lightColor={Styles.white}\n                darkColor={Styles.orange}\n                style={styles.dangerBtnTxt}>\n                Call 911\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.innerView}>\n          <Text\n            bold\n            lightColor={Styles.black}\n            darkColor={Styles.white}\n            style={styles.title}>\n            Select your city.\n          </Text>\n          <View\n            style={Styles.separator}\n            lightColor={Styles.gray}\n            darkColor={Styles.white}\n          />\n          {cities.map((city, i) => (\n            <CityLink\n              key={city}\n              to=\"CategoryScreen\"\n              isLast={i === cities.length - 1}\n              navigation={props.navigation}\n              route={city}\n              saveLocation={saveLocation}\n            />\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  dangerTxt: {\n    fontSize: 18,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  danger: {\n    display: 'flex',\n    padding: 20,\n    width: '100%',\n  },\n  dangerBtnTxt: {\n    alignSelf: 'stretch',\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  dangerBtn: {\n    alignItems: 'center',\n    borderRadius: 6,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  phoneWrap: {\n    position: 'absolute',\n    left: 15,\n  },\n  community: {\n    padding: 20,\n    paddingTop: 30,\n  },\n  communityTxt: {\n    fontSize: 20,\n  },\n  container: {\n    flex: 1,\n  },\n  innerView: {\n    paddingHorizontal: 20,\n    paddingTop: 40,\n    paddingBottom: 50,\n  },\n  marginBottom15: {\n    marginBottom: 15,\n  },\n  marginBottom30: {\n    marginBottom: 30,\n  },\n  marginVertical30: {\n    marginVertical: 30,\n  },\n  title: {\n    fontSize: 28,\n    lineHeight: 34,\n    marginBottom: 32,\n  },\n  blue: {\n    color: Styles.blue,\n  },\n  marginBottom40: {\n    marginBottom: 40,\n  },\n  trusted: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginBottom: 20,\n  },\n  marginRight10: {\n    marginRight: 10,\n  },\n});\n","import { StackScreenProps } from '@react-navigation/stack';\nimport React, { memo } from 'react';\nimport { Dimensions, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Text, View } from '../components';\nimport { RootStackParamList } from '../types';\n\n/**\n * @description This component renders the 404 page.\n * Should never render if used as app, but exists for web version\n */\nexport const NotFoundScreen = memo(({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) => (\n  <View style={styles.container}>\n    <Text bold style={styles.title}>This screen doesn&apos;t exist.</Text>\n    <TouchableOpacity\n      onPress={() => navigation.replace('CitySelectScreen')}\n      style={styles.link}>\n      <Text style={styles.linkText}>\n        Go to home screen!\n      </Text>\n    </TouchableOpacity>\n  </View>\n));\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n    minHeight: Dimensions.get('window').height,\n    padding: 20,\n    paddingBottom: 50,\n  },\n  title: {\n    fontSize: 20,\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\n\nimport { BackButton, IconGroup, Text, View } from '../components';\nimport { Styles } from '../constants';\nimport { useCache, useLocation } from '../context';\nimport { getRecordsFromLocation } from '../queries';\nimport { Caret } from '../svgs';\nimport { tCacheUnion } from '../types';\n\n/**\n * @description renders phone numbers from cache or airtable whichever is available\n */\nexport const PhoneNumberListScreen = (props: any) => {\n  const { cache, setCache } = useCache();\n  const [records, setRecords] = useState([]);\n  const [showDescIds, setShowDescIds] = useState([] as string[]);\n  const { location }: { location: tCacheUnion } = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const phoneNumbers: any = cache[location];\n      if (typeof phoneNumbers !== 'undefined') {\n        setRecords(phoneNumbers);\n        setCache();\n      } else {\n        setRecords(await getRecordsFromLocation(location));\n      }\n    };\n    fetchData();\n  });\n\n  if (records.length === 0) return null;\n\n  // @TODO remove filter once we refactor categories to come from Airtable.\n  // We are only showing phone numbers that match the current category selected by the user.\n  const { route } = props;\n  const sortedAndFilteredRecords = records\n    .filter((record: any) => {\n      const { fields = {} } = record;\n      const { categories = [] as string[] } = fields;\n      const re = /\\s+/gi;\n\n      // In case of data error normalizes categories\n      const normalizedCats = categories\n        .map((cat = '') => cat.toLowerCase().replace(re, ''));\n\n      if (!normalizedCats.includes(route?.params?.section)) return false;\n      return true;\n    })\n    .sort((record: any) => {\n      // and lets always have 'crisis' hotlines at the top\n      // crisis meaning, mental health breakdowns, etc, but not an 'emergency'\n      // wherein someone is currently in physical danger\n      if (record.fields.isCrisis) return -1;\n      return 1;\n    });\n\n  return (\n    <View\n      darkColor={Styles.black}\n      lightColor={Styles.white}\n      style={styles.container}>\n      <BackButton darkColor=\"black\" />\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {sortedAndFilteredRecords.map((record: any) => {\n          const {\n            description,\n            hours,\n            isCrisis,\n            name,\n            phoneNumber,\n            text,\n            website,\n          } = record.fields;\n\n          return (\n            <View\n              key={record.id}\n              darkColor=\"#000\"\n              lightColor={Styles.white}\n              style={styles.item}>\n              <Text\n                bold\n                darkColor={Styles.white}\n                lightColor={Styles.blue}\n                style={[\n                  styles.hours,\n                  styles.centerTxt,\n                  styles.pH10,\n                  isCrisis && { color: Styles.orange },\n                ]}>\n                {hours}\n              </Text>\n              <Text\n                bold\n                darkColor={Styles.white}\n                style={[styles.centerTxt, styles.title]}>\n                {name}\n              </Text>\n              {!!description && (\n                <>\n                  {!showDescIds.includes(record.id) && (\n                    <Text\n                      darkColor={Styles.white}\n                      style={[styles.centerTxt, styles.desc, styles.mb10, styles.pH10]}\n                      onPress={() => {\n                        setShowDescIds([...showDescIds, record.id]);\n                      }}>\n                      Read description\n                    </Text>\n                  )}\n                  {showDescIds.includes(record.id) && (\n                    <Text\n                      darkColor={Styles.white}\n                      style={[styles.centerTxt, styles.mb10, styles.pH10]}>\n                      {description}\n                    </Text>\n                  )}\n                </>\n              )}\n              <Text\n                darkColor={Styles.white}\n                style={[styles.centerTxt, styles.tel]}>\n                {Array.isArray(phoneNumber)\n                  && phoneNumber.map((num, i) => (i === phoneNumber.length - 1\n                    ? `${num}, `\n                    : num))}\n                {!Array.isArray(phoneNumber) && phoneNumber}\n              </Text>\n              <IconGroup\n                crisis={isCrisis}\n                tel={phoneNumber}\n                text={text}\n                website={website}\n              />\n            </View>\n          );\n        })}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backBtn: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingBottom: 30,\n    paddingLeft: 30,\n  },\n  caret: {\n    width: 10,\n  },\n  rotate: {\n    marginRight: 10,\n    transform: [{ rotate: '180deg' }],\n  },\n  container: {\n    flex: 1,\n    paddingTop: 60,\n  },\n  centerTxt: {\n    textAlign: 'center',\n  },\n  desc: {\n    border: '1px solid',\n    borderRadius: 4,\n    fontSize: 14,\n  },\n  mb10: {\n    marginBottom: 10,\n  },\n  mb20: {\n    marginBottom: 20,\n  },\n  mr10: {\n    marginRight: 10,\n  },\n  pH10: {\n    paddingHorizontal: 10,\n  },\n  item: {\n    alignItems: 'center',\n    marginBottom: 30,\n    paddingBottom: 30,\n  },\n  paddingTop30: {\n    paddingTop: 30,\n  },\n  title: {\n    fontSize: 28,\n    marginHorizontal: 'auto',\n    paddingHorizontal: 20,\n    paddingBottom: 10,\n  },\n  phone: {\n    height: 30,\n    width: 30,\n  },\n  marginBottom30: {\n    marginBottom: 30,\n  },\n  hours: {\n    fontSize: 18,\n    paddingBottom: 5,\n  },\n  tel: {\n    marginBottom: 15,\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n","import { DarkTheme, DefaultTheme, NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport { BottomTabNavigator } from './BottomTabNavigator';\nimport { LinkingConfiguration } from './LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\ntype tNavProps = { colorScheme: ColorSchemeName };\nexport const Navigation = ({ colorScheme }: tNavProps) => (\n  <NavigationContainer\n    linking={LinkingConfiguration}\n    theme={colorScheme === 'light' ? DefaultTheme : DarkTheme}>\n    <BottomTabNavigator />\n  </NavigationContainer>\n);\n"],"sourceRoot":""}